{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","clockName","state","date","showClock","timerId","interval","this","window","setInterval","setState","console","info","toUTCString","document","addEventListener","event","preventDefault","_","prevState","newName","oldName","debug","clearInterval","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sNAGA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GASX,IAAMK,EAAb,4MACEC,UAAY,UADd,EAGEC,MAAe,CACbC,KAAM,IAAIP,KACVK,UAAW,EAAKA,UAChBG,WAAW,GANf,EASEC,QAAU,EATZ,EAWEC,SAAW,EAXb,uDAaE,WAAqB,IAAD,OAClBC,KAAKD,SAAWE,OAAOC,aAAY,WACjC,EAAKC,SAAS,CAAEP,KAAM,IAAIP,OAE1Be,QAAQC,KAAK,EAAKV,MAAMC,KAAKU,cAAcd,OAAO,IAAK,MACtD,KAEHQ,KAAKF,QAAUG,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAET,UAAWP,QAC1B,MAEHoB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKP,SAAS,CAAEN,WAAW,OAG7BU,SAASC,iBAAiB,SAAS,WACjC,EAAKL,SAAS,CAAEN,WAAW,SA9BjC,gCAkCE,SAAmBc,EAAoBC,GACrC,IAAMC,EAAUb,KAAKL,MAAMD,UACrBoB,EAAUF,EAAUlB,UAEtBoB,IAAYD,GAEdT,QAAQW,MAAR,uBAA8BD,EAA9B,eAA4CD,MAxClD,kCA4CE,WACEZ,OAAOe,cAAchB,KAAKD,UAC1BE,OAAOe,cAAchB,KAAKF,SAC1BS,SAASU,oBAAoB,eAAe,iBA/ChD,oBAkDE,WACE,MAA4BjB,KAAKL,MAAzBC,EAAR,EAAQA,KAAMF,EAAd,EAAcA,UAEd,OACE,sBAAKwB,UAAU,MAAf,UACE,6CAEClB,KAAKL,MAAME,WACV,sBAAKqB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGxB,IAGF,YAED,sBAAMwB,UAAU,cAAhB,SACGtB,EAAKU,cAAcd,OAAO,IAAK,eAlE9C,GAAyB2B,IAAMC,WCZ/BC,IAASC,OACP,cAAC,EAAD,CAAK1B,KAAM,IAAIP,KAAQK,UAAU,UAAUG,WAAS,IACpDU,SAASgB,eAAe,W","file":"static/js/main.9fd261bd.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  date: Date,\n  clockName: string,\n  showClock: boolean,\n};\n\nexport class App extends React.Component<State> {\n  clockName = 'Clock-0';\n\n  state: State = {\n    date: new Date(),\n    clockName: this.clockName,\n    showClock: true,\n  };\n\n  timerId = 0;\n\n  interval = 0;\n\n  componentDidMount() {\n    this.interval = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ showClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ showClock: true });\n    });\n  }\n\n  componentDidUpdate(_: Readonly<State>, prevState: Readonly<State>) {\n    const newName = this.state.clockName;\n    const oldName = prevState.clockName;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', () => { });\n  }\n\n  render() {\n    const { date, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.showClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">\n              {clockName}\n            </strong>\n\n            {' time is '}\n\n            <span className=\"Clock__time\">\n              {date.toUTCString().slice(-12, -4)}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App date={new Date()} clockName=\"Clock-0\" showClock />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}